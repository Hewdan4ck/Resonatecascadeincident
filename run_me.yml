---
- hosts: localhost
  tasks:
    - name: installing the colletions
      shell: ansible-galaxy collection install community.general
- hosts: routers
  tasks:
    - name: Configure packet forwarding
      lineinfile:
        path: /etc/sysctl.conf
        line: net.ipv4.ip_forward=1
        insertafter: EOF
    - name: Apply sysctl config-file
      shell: sysctl -p
    - name: Commenting the cdrom update
      copy:
        src: ./sources.list
        dest: /etc/apt/sources.list
        mode: "0655"
    - name: Update apt
      apt:
        update_cache: yes
      ignore_errors: true

    - name: Install package
      apt: 
        pkg:
          - strongswan
          - nginx
          - ufw
    - name: Configure ufw routing option
      copy:
        src: ./ufw
        dest: /etc/default/ufw
        mode: "0655"
    - name: still configure
      copy:
        src: ./sysctlufw.conf
        dest: /etc/ufw/sysctl.conf
        mode: "0655"
    - name: UFW start
      ufw:
        state: enabled
    - name: Open ports for SSH and DNS
      ufw:
        rule: allow
        port: '1111'
        proto: tcp
#    - name: DNS port
#      ufw:
#       rule: allow
#       port: '53'
#       proto: any  
    - name: another ssh port
      ufw:
        rule: allow
        port: '22'
        proto: tcp
    - name: UFW port for http
      ufw:
        rule: allow
        port: '8080'
        proto: any
    - name: still http  
      ufw:
        rule: allow
        port: '80'
        proto: any
    - name: UFW others ports
      ufw:
        rule: allow
        port: '1834'
        proto: any
    - name: another other ports)
      ufw:
        rule: allow
        port: '1337'
        proto: any
- hosts: 200.100.200.100 #FW
  tasks:
    - name: Configure UFW iptables
      copy:
        src: ./beforeFW.rules
        dest: /etc/ufw/before.rules
        mode: "0655"
    - name: Reloading UFW
      shell: ufw reload
      
    - name: copy script GRE tunnel
      copy:
        src: ./FW_gre.up
        dest: /etc/FW_gre.up
        mode: "0777"
    - name: start the GRE tunnel script
      shell: /etc/FW_gre.up
      ignore_errors: true
    - name: set crontab
      lineinfile:
        path: /etc/crontab
        line: "@reboot root /etc/FW_gre.up"
        insertafter: EOF
    - name: Static route
      shell: ip route add 192.168.0.0/16 via 10.20.20.2
      ignore_errors: true

    - name: copy conf IPSEC
      copy:
        src: ./ipsec_FW.conf
        dest: /etc/ipsec.conf
        mode: "0655"
    - name: IPSEC secrets
      lineinfile:
        path: /etc/ipsec.secrets
        line: "200.100.100.100 200.100.200.100 : PSK \"2022\""
        insertafter: EOF
    - name: IPSEC start
      shell: ipsec start
      ignore_errors: true 
    - name: Config NGINX proxy
      copy:
        src: ./hyproxy.conf
        dest: /etc/nginx/sites-enabled/default
        mode: "0655"
    - name: Restarting the NGINX
      service:
        name: nginx
        state: restarted
    - name: Check FM
      command: hostname
      register: hostname
    - name: Hostname FW
      hostname:
        name: FW
      when: hostname.stdout != "FW"
    - name: Reboot after hostname
      reboot:

    - name: SSH ports
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: SSH reload
      service:
        name: sshd
        state: reloaded

- hosts: 200.100.100.100 #CSR
  tasks:
    - name: Configure UFW iptables
      copy:
        src: ./beforeCSR.rules
        dest: /etc/ufw/before.rules
        mode: "0655"
    - name: Reloading UFW
      shell: ufw reload

    - name: copy script GRE tunnel
      copy:
        src: ./CSR_gre.up
        dest: /etc/CSR_gre.up
        mode: "0777"
    - name: start the GRE tunnel script
      shell: /etc/CSR_gre.up
      ignore_errors: true
    - name: Static route
      shell: ip route add 172.20.0.0/16 via 10.20.20.1
      ignore_errors: true 
    - name: set crontab
      lineinfile:
        path: /etc/crontab
        line: "@reboot root /etc/CSR_gre.up"
        insertafter: EOF

    - name: copy conf IPSEC
      copy:
        src: ./ipsec_CSR.conf
        dest: /etc/ipsec.conf
        mode: "0655"
    - name: IPSEC secrets
      lineinfile:
        path: /etc/ipsec.secrets
        line: "200.100.100.100 200.100.200.100 : PSK \"2022\""
        insertafter: EOF
    - name: IPSEC start
      shell: ipsec start
      ignore_errors: true
    - name: Hostname CSR
      hostname:
        name: CSR
    - name: Check CSR
      command: hostname
      register: hostname
    - name: Hostname CSR
      hostname:
        name: CSR
      when: hostname.stdout != "CSR"

    - name: SSH ports
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: SSH reload
      service:
        name: sshd
        state: reloaded
- hosts: localhost
  tasks:
    - name: change network place
      copy:
        src: ./interfacessrv
        dest: /etc/network/interfaces
    - name: restart network
      service:
        name: networking
        state: restarted
- hosts: 192.168.200.100
  tasks:
    - name: Commenting the cdrom update
      copy:
        src: ./sources.list
        dest: /etc/apt/sources.list
        mode: "0655"
    - name: Update Apt
      apt:
        update_cache: yes
    - name: Install Package
      apt:
        pkg:
          - chrony
          - bind9
          - nginx
          - keepalived
          - docker
          - docker.io
          - ufw
          - pip
          - curl
    - name: UFW port for ssh
      ufw:
        state: enabled
        rule: allow
        port: '1111'
      ufw:
        rule: allow
        port: '22'
    - name: UFW port for http
      ufw:
        rule: allow
        port: '8080'
      ufw:
        rule: allow
        port: '80'
    - name: UFW others ports
      ufw:
        rule: allow
        port: '1834'
      ufw:
        rule: allow
        port: '1337'
    - name: SSH ports
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: Commenting the cdrom update
      copy:
        src: ./sources.list
        dest: /etc/apt/sources.list
        mode: "0655"
    - name: Open port for Docker-compose
      shell: curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - name: Fix permissions for Docker-compose
      shell: chmod +x /usr/local/bin/docker-compose
    - name: Install Docker module for python
      pip:
        name: docker-compose
    - name: Create folder
      file:
        path: /opt/project
        state: directory
        mode: '0777'
    - name: Copy DockerComposition
      copy:
        src: ./docker-compose.yml
        dest: /opt/project/docker-compose.yml
    - name: deploy DockerCompose
      docker_compose:
        project_src: /opt/project
        files:
          - docker-compose.yml

- hosts: localhost
  tasks:
    - name: change network place
      copy:
        src: ./interfacesaf
        dest: /etc/network/interfaces
    - name: restarting network
      service:
        name: networking
        state: restarted
- hosts: central
  tasks: 
    - name: Commenting the cdrom update
      copy:
        src: ./sources.list
        dest: /etc/apt/sources.list
        mode: "0655"
    - name: Update Apt
      apt:
        update_cache: yes
    - name: Install Package
      apt:
        pkg:
          - chrony
          - bind9
          - nginx
          - keepalived
          - docker
          - docker.io
          - ufw
          - pip
          - curl
    - name: UFW port for ssh
      ufw:
        state: enabled
        rule: allow
        port: '1111'
      ufw:
        rule: allow
        port: '22'
    - name: UFW port for http
      ufw:
        rule: allow
        port: '8080'
      ufw:
        rule: allow
        port: '80'
    - name: UFW others ports
      ufw:
        rule: allow
        port: '1834'
      ufw:
        rule: allow
        port: '1337'
    - name: SSH ports
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: Commenting the cdrom update
      copy:
        src: ./sources.list
        dest: /etc/apt/sources.list
        mode: "0655"

- hosts: 172.20.10.100
  tasks:
    - name: Open port for Docker-compose
      shell: curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - name: Fix permissions for Docker-compose
      shell: chmod +x /usr/local/bin/docker-compose
    - name: Install Docker module for python
      pip:
        name: docker-compose
    - name: Create folder
      file:
        path: /opt/project
        state: directory
        mode: '0777'
    - name: Copy DockerComposition
      copy:
        src: ./docker-compose.yml
        dest: /opt/project/docker-compose.yml
    - name: deploy DockerCompose
      docker_compose:
        project_src: /opt/project
        files:
          - docker-compose.yml
      ignore_errors: true

- hosts: 172.20.30.100 172.20.30.20
  tasks:
    - name: Configure Chrony
      copy:
        src: ./chrony_SRV.conf
        dest: /etc/chrony/chrony.conf
        mode: "0655"
    - name: Restarted Chrony
      service:
        name: chronyd
        state: restarted
        
- hosts: 172.20.30.100 #SRV-1
  vars_files:
    - ./vars.yml
  tasks:
    - name: Configure keepalived
      copy:
        src: ./keepalived_SRV1.conf
        dest: /etc/keepalived/keepalived.conf
        mode: "0644"
    - name: DNS script
      copy:
        src: ./dns_check
        dest: /usr/dns_check
        mode: "0777"
    - name: NTP script
      copy:
        src: ./ntp_check
        dest: /usr/ntp_check
        mode: "0777"
    - name: Restart the keepalived
      service:
        name: keepalived
        state: restarted
    - name: Install Docker module for python
      pip:
        name: docker

    - name: Check Hostname
      command: hostname
      register: hostname100
    - name: Set Hostname
      hostname:
        name: "{{ vm_name_srv1 }}"
      when: hostname100.stdout != "{{ vm_name_srv1 }}"
    - name: After change hostname - reboot
      reboot:
      when: hostname100.stdout != "{{ vm_name_srv1 }}"

    - name: COnfigure SSH
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: Restart ssh
      service:
        name: sshd
        state: restarted
- hosts: 172.20.30.20 #SRV-2
  vars_files:
    - ./vars.yml
  tasks:
    - name: Configure keepalived
      copy:
        src: ./keepalived_SRV2.conf
        dest: /etc/keepalived/keepalived.conf
        mode: "0644"

    - name: DNS script
      copy:
        src: ./dns_check
        dest: /usr/dns_check
        mode: "0777"

    - name: NTP script
      copy:
        src: ./ntp_check
        dest: /usr/ntp_check
        mode: "0777"

    - name: Restart the keepalived
      service:
        name: keepalived
        state: restarted

    - name: Install Docker module for python
      pip:
        name: docker

#    - name: Docker Deploy
#      community.docker.docker_container: 
#       name: WebSite1
#       state: started
#       image: beezzlot/docker-test
#       ports:
#         - "80:8080"

    - name: Check Hostname
      command: hostname
      register: hostname200
    - name: Set Hostname
      hostname:
        name: "{{ vm_name_srv2 }}"
      when: hostname200.stdout != "{{ vm_name_srv2 }}"
    - name: After change hostname - reboot
      reboot:
      when: hostname200.stdout != "{{ vm_name_srv2 }}"

    - name: COnfigure SSH
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
    - name: Restart ssh
      service:
        name: sshd
        state: restarted

